/**
 * COMMON HELPER CLASSES
 */

%buttonReset {
  background: none;
  border: none;
  color: inherit;
  cursor: pointer;
  font: inherit;
  padding: 0;
}

%hiddenFromScreen {
  border: 0;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: 0 -1px -1px 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap;
}

/**
 * COMMON INPUT LABEL STYLES
 */
%inputLabel {
  color: var(--label-color-default, var(--color-black-90));
  display: block;
  font-size: var(--fontsize-body-m);
  font-weight: 500;
  margin-bottom: var(--spacing-3-xs);
}


/**
 * Mixins
 */

@mixin withFocus($selector: focus, $color: var(--color-coat-of-arms), $width: 3px, $radius: false, $offset: false) {
  &:#{selector} {
    @if $radius {
      border-radius: $radius;
    }
    @if $offset {
      outline-offset: $offset;
    }
    outline: $width solid $color;
  }
}

/*
 * Add an outline attribute for element's &:focus pseudo class
 */
@mixin focusOutline($color: var(--focus-outline-color), $width: var(--outline-width), $radius: false, $offset: false) {
  @include withFocus(focus, $color, $width, $offset, $radius)
}

/*
 * Add an outline attribute for element's &:focus-visible pseudo class
 */
@mixin focusVisible($color: var(--focus-outline-color), $width: var(--outline-width), $radius: false, $offset: false) {
  &:focus-visible {
    @if $radius {
      border-radius: $radius;
    }
    @if $offset {
      outline-offset: $offset;
    }
    outline: $width solid $color;
  }
}
